name: Push to Docker Hub and Deploy on k8s

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-staging
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: dataesr/scanr:staging
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Deploy to Cluster
        id: kubectl-deploy
        uses: dataesr/kubectl-deploy@v1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_STAGING }}
        with:
          restart: 'scanr'

      - name: Notify in slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Une nouvelle version de scanR est en pr√©prod. Vous pouvez la voir ici: http://51.91.81.57/"}' ${{ secrets.SLACK_WEBHOOK }}
